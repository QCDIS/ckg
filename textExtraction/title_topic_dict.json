{
    "smart contracts": [
        "smart contract",
        "blockchains support smart contracts",
        "smart contracts compiled",
        "smart contract example",
        "smart contract using",
        "smart contract development",
        "compiled smart contract",
        "special smart contract",
        "smart contract value",
        "smart contract deployed",
        "smart contract address",
        "smart contract deployment",
        "complex smart contract operations",
        "voting smart contract",
        "smart contract voting"
    ],
    "decentralized application": [
        "decentralized systems",
        "distributed application",
        "application",
        "decentralized applications dapp",
        "computer application",
        "initialization"
    ],
    "network": [
        "network connectivity",
        "blockchain network",
        "ethereum network",
        "decentralized network"
    ],
    "private key": [
        "public key",
        "key like"
    ],
    "block chain": [
        "chain"
    ],
    "blockchain nodes": [
        "node",
        "nodes",
        "nodes partition"
    ],
    "account": [
        "contract account",
        "ethereum address account"
    ],
    "distributed": [
        "distributed ledger",
        "distributed computing"
    ],
    "total input": [
        "total output",
        "total computation"
    ],
    "block": [
        "blocks"
    ],
    "inputs value": [
        "outputs value",
        "value"
    ],
    "blockchain p2p network": [
        "p2p example",
        "p2p",
        "unstructured p2p",
        "peer p2p system",
        "peer p2p network"
    ],
    "transaction": [
        "transactions",
        "transactions deployment",
        "contract creation transaction",
        "normal transaction"
    ],
    "new blocks": [
        "different new candidate",
        "new block",
        "new transaction"
    ],
    "different": [
        "different output",
        "different machines",
        "different ethereum"
    ],
    "inputs outputs transaction fee": [
        "transaction fee cost units price unit"
    ],
    "hash": [
        "hash sha256"
    ],
    "different state": [
        "state",
        "state variable",
        "contract state variables",
        "state variables",
        "complete state machine"
    ],
    "part": [
        "one part"
    ],
    "blockchain": [
        "bitcoin blockchain",
        "ethereum blockchains",
        "bitcoin blockchain structured",
        "blockchains",
        "ledger",
        "ethereum blockchain"
    ],
    "use": [
        "use dapp",
        "voting use"
    ],
    "proof": [
        "example proof"
    ],
    "usually": [
        "often"
    ],
    "work pow": [
        "work"
    ],
    "systems": [
        "system",
        "operating systems",
        "system operations",
        "operating system",
        "operating system linux"
    ],
    "requests": [
        "client request"
    ],
    "via": [
        "via selfdestruct operation"
    ],
    "write trans": [
        "read trans"
    ],
    "non": [
        "non transparent manipulation"
    ],
    "client": [
        "client server",
        "extend client server"
    ],
    "partition may": [
        "may change",
        "one program may",
        "smart contract may"
    ],
    "operation": [
        "operations",
        "block operations",
        "operating",
        "deployment operation",
        "different operation"
    ],
    "based": [
        "ethereum based dapp",
        "generated based"
    ],
    "used": [
        "used language",
        "used serpent"
    ],
    "bitcoin": [
        "ethereum"
    ],
    "one first": [
        "one"
    ],
    "sha256 string": [
        "output string",
        "input string"
    ],
    "computing": [
        "computation"
    ],
    "code": [
        "compiled code java file",
        "compiled code"
    ],
    "ethereum virtual machine": [
        "virtual machines",
        "virtual machine",
        "different virtual machines",
        "emulated ethereum virtual machine",
        "ethereum virtual",
        "virtual currency",
        "ethereum virtual machine evm"
    ],
    "programming language": [
        "language",
        "programming language syntax"
    ],
    "development": [
        "online development environment"
    ],
    "candidates": [
        "candidate"
    ],
    "results": [
        "voting results"
    ],
    "candidates via internet": [
        "function via transactions"
    ],
    "voting": [
        "voting service",
        "contract voting"
    ],
    "get": [
        "get confirmation",
        "get candidate"
    ],
    "vote": [
        "post candidate vote"
    ],
    "return list": [
        "list"
    ],
    "function": [
        "function private",
        "function internal",
        "constructor function"
    ],
    "specific": [
        "specified",
        "accepts specific types"
    ],
    "server": [
        "servers"
    ],
    "single point": [
        "centralized point"
    ],
    "data": [
        "data types",
        "complex data types",
        "data structure",
        "data structure called candidate"
    ],
    "example cloud": [
        "cloud"
    ],
    "centralized": [
        "centralized scenario"
    ],
    "multi nodes": [
        "multi servers"
    ],
    "peer": [
        "structured peer"
    ],
    "access": [
        "storage access"
    ],
    "directly interact": [
        "interact"
    ],
    "topology among peers": [
        "among peers"
    ],
    "structured": [
        "unstructured"
    ],
    "underlying physical": [
        "physical",
        "underlying"
    ],
    "run": [
        "run applications"
    ],
    "network https": [
        "https ethereum solidity"
    ],
    "perform": [
        "perform transactions"
    ],
    "protocols within": [
        "within"
    ],
    "gas": [
        "gas limit",
        "gas cost",
        "gas unit",
        "smart contract gas"
    ],
    "address": [
        "addresses"
    ],
    "jvm": [
        "java virtual machine jvm",
        "java virtual",
        "jvm execution",
        "java"
    ],
    "execute": [
        "constructor execute"
    ],
    "first high level smart contract language": [
        "high level smart contract language",
        "high level language"
    ],
    "ethereum solidity": [
        "solidity"
    ],
    "contract": [
        "contract accounts",
        "contract creation"
    ],
    "function set public": [
        "function public"
    ],
    "constructor public": [
        "public",
        "private public"
    ],
    "version": [
        "current version"
    ],
    "name": [
        "string name"
    ],
    "define variables": [
        "define"
    ],
    "local variable": [
        "local variables"
    ],
    "global variable": [
        "global variables"
    ],
    "externally owned account": [
        "externally owned accounts",
        "usually owned",
        "owned addresses"
    ],
    "special build": [
        "build"
    ],
    "two transactions": [
        "three candidates"
    ],
    "send smart contract deployment request": [
        "send transaction"
    ],
    "cost": [
        "actual cost charged",
        "actual cost",
        "ether limit cost price",
        "transaction cost"
    ],
    "gas fee": [
        "gas transaction fee unit"
    ],
    "candidate information": [
        "specific candidate"
    ],
    "using solidity": [
        "using"
    ]
}